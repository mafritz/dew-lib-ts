var DEW=(()=>{var A=Object.defineProperty;var S=(t,e)=>{for(var r in e)A(t,r,{get:e[r],enumerable:!0})};var v={};S(v,{computeSlope:()=>s,getRadialCoordinates:()=>y,getRandomNumber:()=>m,shuffleArray:()=>u,simulateVectorAffectiveSpace:()=>F,sortAffectiveSpace:()=>b,sortByRadialDistance:()=>g,sortByRandomOrder:()=>d,sortByVectorDistance:()=>p,subsetFeelings:()=>h});var s=function(t,e){let r=Math.PI/2-Math.atan(e/t);return t>0&&e>0?r=r-.5*Math.PI:t<0&&e<0?r=r+.5*Math.PI:t>0&&e<0?r=r-.5*Math.PI:t<0&&e>0?r=r+.5*Math.PI:r=0,r=r*180/Math.PI+90,r};var y=function(t,e,r){function o(n){return e+r*Math.cos(n*Math.PI/180)}function f(n){return e+r*Math.sin(n*Math.PI/180)}return JSON.parse(JSON.stringify(t)).feelings.map(function(n){let i=n.angle;return n.coordinates=[],n.coordinates[0]=o(i),n.coordinates[1]=f(i),n})};var m=function(t,e){return Math.floor(Math.random()*(e-t))+t};var u=function(t){let e=t.length,r,o;for(;e!==0;)o=Math.floor(Math.random()*e),e-=1,r=t[e],t[e]=t[o],t[o]=r;return t};var g=function(t,e,r){let o=s(e,r);function f(l,n){let i=l.angle,a=n.angle;return Math.abs(i-o)-Math.abs(a-o)}return t.sort(f),t};var p=function(t,e){function r(l,n){let i=Math.abs(l.coordinates[0]-e[0]),a=Math.abs(n.coordinates[0]-e[0]);return i>a?1:i<a?-1:0}function o(l,n){let i=0;for(let c=0;c<e.length;c++)i+=Math.pow(e[c]-l.coordinates[c],2);i=Math.sqrt(i);let a=0;for(let c=0;c<e.length;c++)a+=Math.pow(e[c]-n.coordinates[c],2);return a=Math.sqrt(a),i>a?1:i<a?-1:0}let f=e.length;return f===1?t.sort(r):f>1?t.sort(o):console.log("The number of appraisals is not valid"),t};var d=function(t){return u(t)};var b=function(t,e){let o=JSON.parse(JSON.stringify(t)).feelings,f=[];return t.algorithmType.toLocaleLowerCase()==="radial"?(e[0]===0&&e[1]===0&&(e[0]=m(-100,100),e[1]=m(-100,100)),f=g(o,e[0],e[1])):t.algorithmType.toLocaleLowerCase()==="vector"?f=p(o,e):t.algorithmType.toLocaleLowerCase()==="random"?f=d(o):console.log("Provide a valid algorithm type."),f};var h=function(t,e){return t.slice(0,e)};function F(t,e){let r=[];for(let o=0;o<t;o++){let f=[];for(let l=0;l<e;l++)f.push(m(-100,100));r.push({label:"Feeling #".concat(String(o+1)),coordinates:f})}return{algorithmType:"vector",feelings:r}}return v;})();
